name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    # ⭐️ JAR 생성
    - name: Build with Maven
      run: mvn clean package -DskipTests

    # Docker 이미지 빌드
    - name: Docker image build
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME}}/spring-boot-app1 .

    # DockerHub 로그인
    - name: Docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # DockerHub로 푸시
    - name: Docker Hub image push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot-app1

    # EC2 키 복호화
    - name: Decode and save private key
      run: |
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > ec2_key.pem
        chmod 600 ec2_key.pem

    # EC2에 SSH로 접속해 배포
    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot-app1:latest
          docker stop app-container || true
          docker rm app-container || true
          docker run -d --name app-container -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot-app1:latest
        EOF
